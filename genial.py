from gpiozero import PWMLED, Button
from random import randint
from time import sleep


def setup():  # Sets up the pins of the GPIO
    global red_led, blue_led, yellow_led, green_led  # The LEDs and buttons have to be global variables
    global red_button, blue_button, yellow_button, green_button
    red_led = PWMLED(18)  # Declaring the LEDs as PWMLED permits the use of the module .pulse()
    blue_led = PWMLED(24)
    yellow_led = PWMLED(12)
    green_led = PWMLED(4)
    red_button = Button(23, pull_up=True)
    blue_button = Button(25, pull_up=True)
    yellow_button = Button(16, pull_up=True)
    green_button = Button(17, pull_up=True)


def destroy():  # Turns all the LEDs off
    red_led.off()
    blue_led.off()
    yellow_led.off()
    green_led.off()


def colours_numbers():  # Generates a random sequence of numbers from 0 to 3 (0=red, 1=blue, 2=yellow, 3=green)
    lights.append(randint(0, 3))


def right_sequence():  # Shows the sequence generated by the computer to the player
    for num in lights:
        sleep(1)
        if num == 0:
            red_led.on()
            sleep(1)
            red_led.off()
        if num == 1:
            blue_led.on()
            sleep(1)
            blue_led.off()
        if num == 2:
            yellow_led.on()
            sleep(1)
            yellow_led.off()
        if num == 3:
            green_led.on()
            sleep(1)
            green_led.off()


def player_sequence():  # Detects if a button is pressed by the player
    while True:
        global r, b, y, g
        if red_button.is_pressed:
            red_led.on()
            while r:
                player.append(0)
                r = False
        else:
            if red_led.on:
                red_led.off()
                r = True
        if blue_button.is_pressed:
            blue_led.on()
            while b:
                player.append(1)
                b = False
        else:
            if blue_led.on:
                blue_led.off()
                b = True
        if yellow_button.is_pressed:
            yellow_led.on()
            while y:
                player.append(2)
                y = False
        else:
            if yellow_led.on:
                yellow_led.off()
                y = True
        if green_button.is_pressed:
            green_led.on()
            while g:
                player.append(3)
                g = False
        else:
            if green_led.on:
                green_led.off()
                g = True
        if len(player) == len(lights):
            if not red_button.is_pressed and not blue_button.is_pressed:
                if not yellow_button.is_pressed and not green_button.is_pressed:
                    break


def check_sequence():  # Checks whether the player turned the right LEDs on or not
    global level  # The variables "level" and "player" have to be global
    global player
    if player == lights:  # All the LEDs pulse when the player's sequence is right
        destroy()
        sleep(1)
        red_led.pulse()
        blue_led.pulse()
        yellow_led.pulse()
        green_led.pulse()
        print('CONGRATULATIONS! YOU BEAT IT!')
        level += 1
        print('Level up! Level {}'.format(level))
        sleep(2)
        destroy()
        colours_numbers()  # When the player passes to the next level, one more colour is added to the sequence
    else:
        destroy()
        sleep(1)
        red_led.pulse()  # Only the red LED pulses when the player's sequence is wrong
        print('SORRY, WRONG SEQUENCE!')
        print('Let`s try level {} again!'.format(level))
        sleep(2)
        red_led.off()
    player = []  # The list player has to be reseted for the next level


def game_loop():
    print('Level 1!')
    while True:
        right_sequence()
        player_sequence()
        check_sequence()


r = b = y = g = True  # Main program
while True:
    setup()
    lights = []
    player = []
    level = 1
    try:
        colours_numbers()
        game_loop()
    except KeyboardInterrupt:  # Press Ctrl + C to leave the game
        print('THANK YOU FOR PLAYING GENIAL!')
        destroy()
        break